import{x as a,c as i,a2 as e,o as t}from"./chunks/framework.BjrWEbRN.js";const d=JSON.parse('{"title":"JDS25Tools","description":"","frontmatter":{},"headers":[],"relativePath":"jdsv25/JDS25Tools.md","filePath":"jdsv25/JDS25Tools.md"}'),n={name:"jdsv25/JDS25Tools.md"},o=Object.assign(n,{setup(l){return a(()=>{location.reload()}),(h,s)=>(t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="jds25tools" tabindex="-1">JDS25Tools <a class="header-anchor" href="#jds25tools" aria-label="Permalink to &quot;JDS25Tools&quot;">​</a></h1><p>在 <code>JDSV25</code> 内有个工具类 <code>JDS25Tools</code> 提供了一些静态方法</p><h2 id="获取-json-数据并渲染" tabindex="-1">获取 json 数据并渲染 <a class="header-anchor" href="#获取-json-数据并渲染" aria-label="Permalink to &quot;获取 json 数据并渲染&quot;">​</a></h2><p><code>ajaxJSON(url, render, callback)</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JDS25Tools.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ajaxJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 内容渲染</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 回调函数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="获取-id-元素高度返回数字类型" tabindex="-1">获取 id 元素高度返回数字类型 <a class="header-anchor" href="#获取-id-元素高度返回数字类型" aria-label="Permalink to &quot;获取 id 元素高度返回数字类型&quot;">​</a></h2><p><code>getIdHeight(id)</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JDS25Tools.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getIdHeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;widewrapper&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="获取浏览器宽度并返回数字类型" tabindex="-1">获取浏览器宽度并返回数字类型 <a class="header-anchor" href="#获取浏览器宽度并返回数字类型" aria-label="Permalink to &quot;获取浏览器宽度并返回数字类型&quot;">​</a></h2><p><code>browserWidth()</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JDS25Tools.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">browserWidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="高度对齐" tabindex="-1">高度对齐 <a class="header-anchor" href="#高度对齐" aria-label="Permalink to &quot;高度对齐&quot;">​</a></h2><p><code>tile(els, columns)</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JDS25Tools.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.demo h2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="模拟点击" tabindex="-1">模拟点击 <a class="header-anchor" href="#模拟点击" aria-label="Permalink to &quot;模拟点击&quot;">​</a></h2><p><code>trigger(el)</code></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JDS25Tools.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.demo h2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><h2 id="持续更新" tabindex="-1">持续更新 <a class="header-anchor" href="#持续更新" aria-label="Permalink to &quot;持续更新&quot;">​</a></h2><p>还会继续更新</p>`,19)])))}});export{d as __pageData,o as default};
